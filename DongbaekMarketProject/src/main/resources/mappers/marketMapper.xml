<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mapper.MarketMapper">

	<!-- 시장 전체 조회 -->
	<select id="selectMarketAll"
		resultType="com.itwillbs.domain.MarketVO">
		select * from market
	</select>

	<!-- 시장 조회 -->
	<select id="marketList"
		resultType="com.itwillbs.domain.MarketVO">
		select * from market
		where
		market_code = 1
	</select>

	<!-- marekt_code에 따른 시장 조회 -->
	<select id="marketListCode"
		resultType="com.itwillbs.domain.MarketVO">
		select * from market
		where market_code = 2
	</select>

	<!-- 제품 조회 -->
	<select id="getProductAll"
		resultType="com.itwillbs.domain.ProductVO">
		select * from product
	</select>

	<!-- 전체 가게 조회 -->
	<select id="storeList" resultType="com.itwillbs.domain.StoreVO">
		select * from store
		<!-- where market_code = #{market_code} -->
		order by viewcnt desc
		limit 0, 10
	</select>

	<!-- 각 가게 정보 조회 -->
	<select id="selectStore"
		resultType="com.itwillbs.domain.StoreVO">
		select * from store
		where
		store_code = #{store_code}
	</select>

	<!-- 가게별 상품 조회 -->
	<select id="productOnStore"
		resultType="com.itwillbs.domain.ProductVO" parameterType="map">
		select * from product
		where store_code = #{store_code}
		<choose>
			<when test="orderBy == 'popularity'">
				ORDER BY viewcnt DESC
			</when>
			<when test="orderBy == 'lowPrice'">
				ORDER BY price ASC
			</when>
			<when test="orderBy == 'highPrice'">
				ORDER BY price DESC
			</when>
		</choose>
	</select>

	<!-- 가게 조회수 증가 -->
	<update id="updateViewcnt">
		update store set viewcnt = viewcnt + 1
		where
		store_code = #{store_code}
	</update>

	<!-- 각 상품 불러오기 -->
	<select id="eachProduct"
		resultType="com.itwillbs.domain.ProductVO">
		select * from product
		where
		product_code = #{product_code}
	</select>

	<!-- 상품별 리뷰 불러오기 -->
	<select id="productReview"
		resultType="com.itwillbs.domain.ReviewVO">
		select * from review
		where
		product_code = #{prouct_code}
	</select>

	<!-- 문의 작성하기 -->
	<insert id="writeQuestion">
		insert into question(user_id,
		user_name,title,content,q_type,product_code,regdate)
		values(#{user_id},#{user_name},#{title},#{content},#{q_type},#{product_code},now())
	</insert>

	<!-- 문의 글 불러오기 페이징처리 -->
	<select id="selectQuestion"
		resultType="com.itwillbs.domain.QuestionVO">
		<![CDATA[
		select * from question
		where product_code = #{product_code}
		order by regdate desc 
		limit #{cri.startPage},#{cri.pageSize}
		]]>
	</select>

	<!-- 전체 글 계산 -->
	<select id="totalCount" resultType="int">
		select count(q_code) from
		question;
	</select>

	<!-- 문의 글 목록 페이징처리 -->
	<select id="questionPage"
		resultType="com.itwillbs.domain.QuestionVO">
  	<![CDATA[
  		select * from question
  		where product_code = #{product_code}
  		order by regdate desc
  		limit #{page},10
  	]]>
	</select>


	<!-- 즐겨찾기에 넣기 -->
	<insert id="markStore">
		insert into mark(store_code, user_id)
		values (#{store_code}, #{user_id})
	</insert>

	<!-- 문의 상세정보 불러오기 -->
	<select id="questionDetail"
		resultType="com.itwillbs.domain.QuestionVO">
		select * from question
		where q_code = #{q_code}
	</select>

	<!-- 구독 상품 리스트 가져오기 -->
	<select id="getSubList" resultType="com.itwillbs.domain.ProductVO">
		SELECT * FROM product
		WHERE sub_product = '구독'

	</select>

	<!-- 위시리스트 가져오기 -->
	<select id="getUserWish" resultType="com.itwillbs.domain.WishVO">
		SELECT * FROM wish
		WHERE user_id = #{user_id}
	</select>

	<!-- 위시리스트 유무 체크 -->
	<select id="userProductWish" resultType="int">
		SELECT COUNT(*) FROM wish
		WHERE product_code = #{product_code} AND user_id = #{user_id}
	</select>

	<!-- 위시 넣기 -->
	<insert id="insertWish">
		INSERT INTO wish (product_code,user_id)
		VALUES (#{product_code},#{user_id});
	</insert>

	<!-- 위시 삭제 -->
	<delete id="deleteWish">
		DELETE FROM wish
		WHERE product_code = #{product_code} AND user_id = #{user_id}

	</delete>

	<!-- 회원 구독 물품 추가 -->
	<insert id="insertSubPro">
		INSERT INTO subscribe_product (product_code, user_id, count)
		VALUES (#{product_code},#{user_id},#{count})
	</insert>

	<!-- 찜에 넣기 -->
	<insert id="wishProduct">
		insert into wish(product_code, user_id)
		values (#{product_code}, #{user_id})
	</insert>
	
	<!-- 찜 상품 다르게 표시하기 -->
	<select id="selectWish" resultType="com.itwillbs.domain.WishVO">
		select * from wish
		where user_id = #{user_id}
	</select>
	
	<!-- 카트에 넣기 -->
	<insert id="insertCart">
		insert into cart(user_id,product_code,count,price)
		values (#{user_id},#{product_code},#{count},#{price})
	</insert>

	<!-- 최근 문의글 10개 불러오기 -->
	<select id="newQuestion"
		resultType="com.itwillbs.domain.QuestionVO">
		select * from question
		where product_code = #{product_code}
		order by regdate desc
		limit 0,10;
	</select>

	<!-- 문의 답글 달기 -->
	<insert id="qAnswer">
		insert into answer
		values(#{answer_code}, #{q_code},
		#{answer_content}, #{writer}, now())
	</insert>
	<!-- 문의 답글 조회 -->
	<select id="selectAnswer"
		resultType="com.itwillbs.domain.AnswerVO">
		select * from answer where q_code = #{q_code}
	</select>
	<!-- 문의 답글 중복체크 -->
	<select id="checkDuplicateAnswer" parameterType="int"
		resultType="int">
		SELECT COUNT(*) FROM answer WHERE q_code = #{q_code}
	</select>

<<<<<<< Upstream, based on origin/develop
	<!-- 찜 중복체크 -->
<!-- 	<select id="checkDuplicateWish" parameterType="map" -->
<!-- 		resultType="int"> -->
<!-- 		select count(*) from wish -->
<!-- 		where product_code = #{product_code, jdbcType=INTEGER} and user_id = -->
<!-- 		#{user_id, jdbcType=VARCHAR} -->
<!-- 	</select> -->
	<!-- 찜 중복체크 -->
	<select id="checkDuplicateWish" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM wish WHERE user_id = #{user_id} and product_code = #{product_code}
	</select>
	<!-- 즐겨찾기 중복체크 -->
	<select id="checkDuplicateMark" parameterType="int"
		resultType="int">
		select count(*) from mark where store_code
	</select>
=======
	<!-- 0509 카트 번호 생성 -->
	<!-- maxCartCode 가져오기 -->
	<select id="selectMaxCartCode" resultType="int">
		SELECT Ifnull(Max(cart_code), 0) AS cart_code
		FROM   cart   
	</select>
	
</mapper>
>>>>>>> e434b17 cart session 생성, cart.jsp 오류 수정 / cart.jsp 금액 수정해야함


</mapper>